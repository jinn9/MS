server:
  port: 9000

spring:
  application:
    name: order
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
  h2:
    console:
      enabled: true
  jpa:
    show-sql: true
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
    function:
      definition: completeOrder
    stream:
      bindings:
        completeOrder-in-0:
          destination: delivery-to-order
          group: ${spring.application.name}
        sendCommunication-out-0:
          destination: order-to-delivery
      kafka:
        binder:
          brokers:
            - localhost:9092

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      access: unrestricted
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "order"
    description: "Order Service"
    version: "1.0.0"

logging:
  level:
    com:
      github:
        jinn9:
          order: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10 # how many requests to monitor before switching from closed to open state
      permittedNumberOfCallsInHalfOpenState: 2 # when in half state, use this amount of requests to decide to move to closed or open state
      failureRateThreshold: 50
      waitDurationInOpenState: 10000 # duration before switching from open to half open state